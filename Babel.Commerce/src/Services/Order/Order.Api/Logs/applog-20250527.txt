{"Timestamp":"2025-05-27T02:07:58.4130535+00:00","Level":"Warning","MessageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","Properties":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:07:58.4834256+00:00","Level":"Warning","MessageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","Properties":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:07:58.4931207+00:00","Level":"Information","MessageTemplate":"Initializing UI Database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:07:59.8154405+00:00","Level":"Information","MessageTemplate":"Saving healthchecks configuration to database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:07:59.9620327+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:07:59.9865866+00:00","Level":"Information","MessageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","Properties":{"KeyId":"8a2e6db6-553d-4596-84b1-72020181422d","CreationDate":"2025-05-27T02:07:59.9823603+00:00","ActivationDate":"2025-05-27T02:07:59.9772706+00:00","ExpirationDate":"2025-08-25T02:07:59.9772706+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{8a2e6db6-553d-4596-84b1-72020181422d}"}],"CreationDate":[{"Format":"u","Rendering":"2025-05-27 02:07:59Z"}],"ActivationDate":[{"Format":"u","Rendering":"2025-05-27 02:07:59Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-08-25 02:07:59Z"}]}}
{"Timestamp":"2025-05-27T02:08:00.0077128+00:00","Level":"Warning","MessageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","Properties":{"KeyId":"8a2e6db6-553d-4596-84b1-72020181422d","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{8a2e6db6-553d-4596-84b1-72020181422d}"}]}}
{"Timestamp":"2025-05-27T02:08:00.2212158+00:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4252549+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4286209+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4377768+00:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4388397+00:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4392981+00:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.4393008+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.5383928+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:02.6275413+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:12.6645131+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:12.6654146+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:12.6712465+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:12.6805062+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:12.6904420+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:22.6967313+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:22.6974106+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:22.7295759+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:22.7330478+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:22.7342066+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:32.7295674+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:32.7302246+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:32.7353522+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:32.7401986+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:32.7416130+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:42.7415556+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:42.7428248+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:42.7484346+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:42.7511105+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:42.7521122+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:52.7496139+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:52.7506844+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:52.7627995+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:52.7690148+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:08:52.7730145+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:02.8011411+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:02.8017920+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:02.8267721+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:02.8328582+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:02.8355964+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:12.8412542+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:12.8426684+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:12.8525400+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:12.8997669+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:12.9016701+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:22.9002324+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:22.9008426+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:22.9060013+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:22.9125425+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:22.9142761+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:32.9126647+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:32.9133123+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:32.9404629+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:32.9451962+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:32.9478507+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:42.9564548+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:42.9574475+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:42.9730012+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:43.0072444+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:43.0974970+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:53.1011082+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:53.1019419+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:53.1298832+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:53.1381697+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:09:53.1404151+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:03.1427149+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:03.1437350+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:03.1745990+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:03.1989481+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:03.2009787+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:13.2012589+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:13.2019189+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:13.2066825+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:13.2113262+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:13.2128877+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:23.2103096+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:23.2109051+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:23.2155971+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:23.2187574+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:23.2203281+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:33.2249309+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:33.2254424+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:33.2602597+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:33.2640597+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:33.2656865+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:43.2692020+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:43.2704566+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:43.2765923+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:43.2805269+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:43.2817118+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.2844252+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.2854094+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.2922136+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.3004179+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.3033156+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.4807597+00:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.7544947+00:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.7649769+00:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:53.7983629+00:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"RouteData":"{action = \"GetAll\", controller = \"Order\"}","MethodInfo":"System.Threading.Tasks.Task`1[Service.Common.Collection.DataCollection`1[Order.Service.Queries.DTOs.OrderDto]] GetAll(Int32, Int32, System.String)","Controller":"Order.Api.Controllers.OrderController","AssemblyName":"Order.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:54.3698004+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:54.3705877+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:54.3711451+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.5462242+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"elapsed":"78","parameters":"@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [t].[OrderId], [t].[ClientId], [t].[CreatedAt], [t].[PaymentType], [t].[Status], [t].[Total], [o0].[OrderDetailId], [o0].[OrderId], [o0].[ProductId], [o0].[Quantity], [o0].[Total], [o0].[UnitPrice]\nFROM (\n    SELECT [o].[OrderId], [o].[ClientId], [o].[CreatedAt], [o].[PaymentType], [o].[Status], [o].[Total]\n    FROM [Order].[Orders] AS [o]\n    ORDER BY [o].[OrderId] DESC\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\n) AS [t]\nLEFT JOIN [Order].[OrderDetail] AS [o0] ON [t].[OrderId] = [o0].[OrderId]\nORDER BY [t].[OrderId] DESC","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.6390348+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Order].[Orders] AS [o]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.7147166+00:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"ObjectResultType":"ObjectResult","Type":"Service.Common.Collection.DataCollection`1[[Order.Service.Queries.DTOs.OrderDto, Order.Service.Queries, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"4aec28f1-a7b6-414c-a545-af8ea549e378","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.7317726+00:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","ElapsedMilliseconds":1928.8454,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.7344950+00:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:10:55.7491666+00:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"7b6dbd1a24ff382151489d1c7839b750","SpanId":"e2040df4154d503f","Properties":{"ElapsedMilliseconds":2270.2438,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCSOEQO24RG:00000001","RequestPath":"/orders","ConnectionId":"0HNCSOEQO24RG","EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:03.3120238+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:03.3124592+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:03.3178278+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:03.3211913+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:03.3226543+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:13.3189543+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:13.3261630+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:13.3313568+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:13.3346163+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:13.3364520+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:23.3409878+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:23.3414175+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:23.3460688+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:23.3490593+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-27T02:11:23.3508007+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb07a0a84aa1\\app","MachineName":"cb07a0a84aa1","ApplicationName":"Order.Api"}}
