{"Timestamp":"2025-05-29T22:28:26.0930241+00:00","Level":"Warning","MessageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","Properties":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:26.5845878+00:00","Level":"Warning","MessageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","Properties":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:26.6946853+00:00","Level":"Information","MessageTemplate":"Initializing UI Database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:39.9343725+00:00","Level":"Information","MessageTemplate":"Saving healthchecks configuration to database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:40.8620834+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:41.0142522+00:00","Level":"Information","MessageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","Properties":{"KeyId":"334b14f4-6f11-4e96-b535-795c6f02ce56","CreationDate":"2025-05-29T22:28:40.9960356+00:00","ActivationDate":"2025-05-29T22:28:40.9755530+00:00","ExpirationDate":"2025-08-27T22:28:40.9755530+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{334b14f4-6f11-4e96-b535-795c6f02ce56}"}],"CreationDate":[{"Format":"u","Rendering":"2025-05-29 22:28:40Z"}],"ActivationDate":[{"Format":"u","Rendering":"2025-05-29 22:28:40Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-08-27 22:28:40Z"}]}}
{"Timestamp":"2025-05-29T22:28:41.2281691+00:00","Level":"Warning","MessageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","Properties":{"KeyId":"334b14f4-6f11-4e96-b535-795c6f02ce56","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{334b14f4-6f11-4e96-b535-795c6f02ce56}"}]}}
{"Timestamp":"2025-05-29T22:28:42.1544865+00:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.8569820+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.8740263+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.9212055+00:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.9550466+00:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.9564324+00:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:47.9788869+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:48.6230283+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:49.0812254+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:59.2219475+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:59.2240894+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:59.2543382+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:59.2887290+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:28:59.3314012+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:09.3385895+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:09.3395852+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:09.3475035+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:09.3542338+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:09.3569137+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:19.3668089+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:19.3677918+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:19.3885935+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:19.3941012+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:19.3993987+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:29.4013542+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:29.4022725+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:29.4097108+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:29.4151029+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:29.4176430+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:39.4135162+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:39.4144414+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:39.4426106+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:39.4479423+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:39.4503503+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:49.4531793+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:49.4539126+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:49.4607982+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:49.4653144+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:49.4673284+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:59.4601998+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:59.4608787+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:59.4670254+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:59.4716646+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:29:59.4738315+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:09.4694328+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:09.4700385+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:09.4766036+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:09.4809769+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:09.4828951+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:19.4815202+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:19.4826086+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:19.4893576+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:19.4957238+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:19.4990933+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:29.5130871+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:29.5140911+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:29.5215029+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:29.5256542+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:29.5278287+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:39.5351216+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:39.5357183+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:39.5426545+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:39.5480117+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:39.5702636+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:49.5801926+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:49.5811730+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:49.5896521+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:49.5947863+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:49.5973928+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:59.5989421+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:59.5995444+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:59.6091269+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:59.6131783+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:30:59.6146893+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:09.6131923+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:09.6138280+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:09.6622722+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:09.6876051+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:09.7103074+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:19.7296722+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:19.7302475+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:19.7689675+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:19.7751743+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:19.7774519+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:29.8001290+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:29.8034377+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:29.8105032+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:29.8359093+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:29.8381598+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:39.8397026+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:39.8402529+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:39.8536697+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:39.8579636+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:39.8595807+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:49.8606442+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:49.8612505+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:49.8683273+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:49.8723362+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:49.8742223+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:59.8760951+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:59.8766449+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:59.8843205+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:59.8898099+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:31:59.8922999+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:32:09.8912113+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:32:09.8919952+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:32:09.8983041+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:32:09.9029482+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:32:09.9053858+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"b24d8cd39ccb\\app","MachineName":"b24d8cd39ccb","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:40.5298664+00:00","Level":"Warning","MessageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","Properties":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:40.6314156+00:00","Level":"Warning","MessageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","Properties":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:40.6497116+00:00","Level":"Information","MessageTemplate":"Initializing UI Database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:42.4178950+00:00","Level":"Information","MessageTemplate":"Saving healthchecks configuration to database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:42.6406789+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:42.6793250+00:00","Level":"Information","MessageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","Properties":{"KeyId":"e3032128-44f2-4997-ad21-b11b1214e2e1","CreationDate":"2025-05-29T22:47:42.6722402+00:00","ActivationDate":"2025-05-29T22:47:42.6632674+00:00","ExpirationDate":"2025-08-27T22:47:42.6632674+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{e3032128-44f2-4997-ad21-b11b1214e2e1}"}],"CreationDate":[{"Format":"u","Rendering":"2025-05-29 22:47:42Z"}],"ActivationDate":[{"Format":"u","Rendering":"2025-05-29 22:47:42Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-08-27 22:47:42Z"}]}}
{"Timestamp":"2025-05-29T22:47:42.7086110+00:00","Level":"Warning","MessageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","Properties":{"KeyId":"e3032128-44f2-4997-ad21-b11b1214e2e1","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{e3032128-44f2-4997-ad21-b11b1214e2e1}"}]}}
{"Timestamp":"2025-05-29T22:47:42.9510033+00:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8087909+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8153502+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8319466+00:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8342694+00:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8358559+00:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:45.8464333+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:46.0385700+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:46.2034836+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:56.2512444+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:56.2523024+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:56.2576806+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:56.2709204+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:47:56.3086782+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:06.3089337+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:06.3096586+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:06.3160871+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:06.3202097+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:06.3219850+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:16.3376868+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:16.3386457+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:16.3670236+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:16.3750136+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:16.3786545+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:26.3770943+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:26.3779000+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:26.3839484+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:26.3892377+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:26.3914185+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:36.3950443+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:36.3957936+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:36.4026299+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:36.4080504+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:48:36.4109754+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"cb7ee3488388\\app","MachineName":"cb7ee3488388","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:58:36.4394592+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"a9b353abdf6e\\app","MachineName":"a9b353abdf6e","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:58:36.5787934+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"a9b353abdf6e\\app","MachineName":"a9b353abdf6e","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T22:58:36.5803882+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"a9b353abdf6e\\app","MachineName":"a9b353abdf6e","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:02:59.0835887+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"7b1f041c8390\\app","MachineName":"7b1f041c8390","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:02:59.2207160+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"7b1f041c8390\\app","MachineName":"7b1f041c8390","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:02:59.2218503+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"7b1f041c8390\\app","MachineName":"7b1f041c8390","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:43.6758313+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:44.0226847+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:44.0340491+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:47.0721242+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:47.0901836+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:47.1030038+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:58.3610370+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9,126","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\n","commandText":"CREATE DATABASE [CarritoElectronico03];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:06:59.9839736+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1,615","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\n","commandText":"IF SERVERPROPERTY('EngineEdition') <> 5\nBEGIN\n    ALTER DATABASE [CarritoElectronico03] SET READ_COMMITTED_SNAPSHOT ON;\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.1951545+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"47","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.4516796+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"48","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"IF SCHEMA_ID(N'Order') IS NULL EXEC(N'CREATE SCHEMA [Order];');\nCREATE TABLE [Order].[__EFMigrationsHistory] (\n    [MigrationId] nvarchar(150) NOT NULL,\n    [ProductVersion] nvarchar(32) NOT NULL,\n    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.4589617+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.5074246+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"40","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT OBJECT_ID(N'[Order].[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.5584374+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"35","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [MigrationId], [ProductVersion]\nFROM [Order].[__EFMigrationsHistory]\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.6017556+00:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250430234920_InicialDB","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.7757341+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"IF SCHEMA_ID(N'Order') IS NULL EXEC(N'CREATE SCHEMA [Order];');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.7967665+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"CREATE TABLE [Order].[Orders] (\n    [OrderId] int NOT NULL IDENTITY,\n    [Status] int NOT NULL,\n    [PaymentType] int NOT NULL,\n    [ClientId] int NOT NULL,\n    [CreatedAt] datetime2 NOT NULL,\n    [Total] decimal(18,2) NOT NULL,\n    CONSTRAINT [PK_Orders] PRIMARY KEY ([OrderId])\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.8347314+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"CREATE TABLE [Order].[OrderDetail] (\n    [OrderDetailId] int NOT NULL IDENTITY,\n    [ProductId] int NOT NULL,\n    [Quantity] int NOT NULL,\n    [UnitPrice] decimal(18,2) NOT NULL,\n    [Total] decimal(18,2) NOT NULL,\n    [OrderId] int NULL,\n    CONSTRAINT [PK_OrderDetail] PRIMARY KEY ([OrderDetailId]),\n    CONSTRAINT [FK_OrderDetail_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Order].[Orders] ([OrderId])\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.8563504+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"19","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"CREATE INDEX [IX_OrderDetail_OrderId] ON [Order].[OrderDetail] ([OrderId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:00.9817076+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"110","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"INSERT INTO [Order].[__EFMigrationsHistory] ([MigrationId], [ProductVersion])\nVALUES (N'20250430234920_InicialDB', N'8.0.15');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:02.0116273+00:00","Level":"Warning","MessageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","Properties":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:02.0147231+00:00","Level":"Warning","MessageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","Properties":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:02.0358145+00:00","Level":"Information","MessageTemplate":"Initializing UI Database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:02.8111052+00:00","Level":"Information","MessageTemplate":"Saving healthchecks configuration to database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:03.1900516+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:03.2286273+00:00","Level":"Information","MessageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","Properties":{"KeyId":"f8d45bf5-5132-488d-a01e-4eb79597cffb","CreationDate":"2025-05-29T23:07:03.2223621+00:00","ActivationDate":"2025-05-29T23:07:03.2053529+00:00","ExpirationDate":"2025-08-27T23:07:03.2053529+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{f8d45bf5-5132-488d-a01e-4eb79597cffb}"}],"CreationDate":[{"Format":"u","Rendering":"2025-05-29 23:07:03Z"}],"ActivationDate":[{"Format":"u","Rendering":"2025-05-29 23:07:03Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-08-27 23:07:03Z"}]}}
{"Timestamp":"2025-05-29T23:07:03.2522005+00:00","Level":"Warning","MessageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","Properties":{"KeyId":"f8d45bf5-5132-488d-a01e-4eb79597cffb","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{f8d45bf5-5132-488d-a01e-4eb79597cffb}"}]}}
{"Timestamp":"2025-05-29T23:07:03.5250778+00:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.8726003+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.8799116+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.8985530+00:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.9010114+00:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.9018553+00:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:06.9060171+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:07.1457302+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:07.4061059+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:17.4480754+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:17.4489680+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:17.4555826+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:17.4737381+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:17.4937556+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:27.5028158+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:27.5036840+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:27.5113949+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:27.5166007+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:27.5186743+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:37.5246198+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:37.5253637+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:37.5311615+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:37.5355288+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:37.5372195+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:47.5377152+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:47.5384625+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:47.5934461+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:47.5984976+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:47.6005122+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:57.6068839+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:57.6074206+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:57.6147446+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:57.6202849+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:07:57.6224151+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:07.6518235+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:07.6526064+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:07.6597280+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:07.6656761+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:07.6680888+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:17.6692455+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:17.6701458+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:17.6760538+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:17.6805454+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:17.6827678+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:27.6873715+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:27.6881209+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:27.7155962+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:27.7208540+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:27.7234711+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:37.7301188+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:37.7306558+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:37.7374703+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:37.7437252+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:37.7464975+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:47.7556180+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:47.7566622+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:47.7950753+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:47.7998254+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:08:47.8017707+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:26.1220467+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"Order","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:26.4420114+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"Total","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:26.4537244+00:00","Level":"Warning","MessageTemplate":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","Properties":{"property":"UnitPrice","entityType":"OrderDetail","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.1195344+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"92","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.2301484+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"64","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT OBJECT_ID(N'[Order].[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.2506715+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"13","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.2784999+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT OBJECT_ID(N'[Order].[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.3740016+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [MigrationId], [ProductVersion]\nFROM [Order].[__EFMigrationsHistory]\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:30.4264163+00:00","Level":"Information","MessageTemplate":"No migrations were applied. The database is already up to date.","Properties":{"EventId":{"Id":20405,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationsNotApplied"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:31.0689209+00:00","Level":"Warning","MessageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","Properties":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:31.0710057+00:00","Level":"Warning","MessageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","Properties":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:31.0945852+00:00","Level":"Information","MessageTemplate":"Initializing UI Database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:31.9461582+00:00","Level":"Information","MessageTemplate":"Saving healthchecks configuration to database","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:32.2092224+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:32.2455716+00:00","Level":"Information","MessageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","Properties":{"KeyId":"8acb0975-85f3-4287-8c2f-227de0443b7f","CreationDate":"2025-05-29T23:17:32.2385450+00:00","ActivationDate":"2025-05-29T23:17:32.2264661+00:00","ExpirationDate":"2025-08-27T23:17:32.2264661+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{8acb0975-85f3-4287-8c2f-227de0443b7f}"}],"CreationDate":[{"Format":"u","Rendering":"2025-05-29 23:17:32Z"}],"ActivationDate":[{"Format":"u","Rendering":"2025-05-29 23:17:32Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-08-27 23:17:32Z"}]}}
{"Timestamp":"2025-05-29T23:17:32.2786599+00:00","Level":"Warning","MessageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","Properties":{"KeyId":"8acb0975-85f3-4287-8c2f-227de0443b7f","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"},"Renderings":{"KeyId":[{"Format":"B","Rendering":"{8acb0975-85f3-4287-8c2f-227de0443b7f}"}]}}
{"Timestamp":"2025-05-29T23:17:32.8244806+00:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.2580354+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.2707480+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.3158088+00:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.3195021+00:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.3233615+00:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:38.3499632+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:39.0436345+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:39.3271566+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:49.4252145+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:49.4275638+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:49.4380497+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:49.4819261+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:49.5123052+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:59.5213398+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:59.5228803+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:59.5667750+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:59.5785007+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:17:59.5828620+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:09.5851731+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:09.5859228+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:09.6774558+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:09.7081071+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:09.7112912+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:19.7178318+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:19.7206677+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:19.7987826+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:19.8100851+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:19.8140747+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:29.8469054+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:29.8476935+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:29.8559615+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:29.8613276+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:29.8660327+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:35.3775247+00:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:35.9573884+00:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:35.9772446+00:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:36.0114366+00:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"RouteData":"{action = \"GetAll\", controller = \"Order\"}","MethodInfo":"System.Threading.Tasks.Task`1[Service.Common.Collection.DataCollection`1[Order.Service.Queries.DTOs.OrderDto]] GetAll(Int32, Int32, System.String)","Controller":"Order.Api.Controllers.OrderController","AssemblyName":"Order.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.0055694+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"elapsed":"156","parameters":"@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [t].[OrderId], [t].[ClientId], [t].[CreatedAt], [t].[PaymentType], [t].[Status], [t].[Total], [o0].[OrderDetailId], [o0].[OrderId], [o0].[ProductId], [o0].[Quantity], [o0].[Total], [o0].[UnitPrice]\nFROM (\n    SELECT [o].[OrderId], [o].[ClientId], [o].[CreatedAt], [o].[PaymentType], [o].[Status], [o].[Total]\n    FROM [Order].[Orders] AS [o]\n    ORDER BY [o].[OrderId] DESC\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\n) AS [t]\nLEFT JOIN [Order].[OrderDetail] AS [o0] ON [t].[OrderId] = [o0].[OrderId]\nORDER BY [t].[OrderId] DESC","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.1787497+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"elapsed":"32","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Order].[Orders] AS [o]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.3356964+00:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"ObjectResultType":"ObjectResult","Type":"Service.Common.Collection.DataCollection`1[[Order.Service.Queries.DTOs.OrderDto, Order.Service.Queries, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.3660035+00:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","ElapsedMilliseconds":1345.7633,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.3707307+00:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:37.3850959+00:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"19b4a083db9a1aed5105c7dcba7b9f04","SpanId":"02441a0d624e2c6b","Properties":{"ElapsedMilliseconds":2010.5654,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQN:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQN","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:39.8743028+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:39.8757948+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:39.8829042+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:39.8878339+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:39.8895704+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:49.8893580+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:49.8900903+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:49.8996303+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:49.9082013+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:49.9120169+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:59.9147634+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:59.9153479+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:59.9217478+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:59.9271977+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:18:59.9288720+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:09.9240164+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:09.9247101+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:09.9330036+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:09.9419589+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:09.9447007+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:19.9486582+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:19.9493209+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:19.9637097+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:19.9684294+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:19.9702737+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:29.9801477+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:29.9877762+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:29.9952605+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:30.0016971+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:30.0077109+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:40.0147600+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:40.0152928+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:40.0224764+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:40.0265320+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:40.0291335+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:50.0315088+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:50.0320460+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:50.0377156+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:50.0415370+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:19:50.0431687+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:00.0496228+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:00.0504302+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:00.0572150+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:00.0622556+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:00.0643177+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.2413411+00:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.2599510+00:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.2666327+00:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"RouteData":"{action = \"GetAll\", controller = \"Order\"}","MethodInfo":"System.Threading.Tasks.Task`1[Service.Common.Collection.DataCollection`1[Order.Service.Queries.DTOs.OrderDto]] GetAll(Int32, Int32, System.String)","Controller":"Order.Api.Controllers.OrderController","AssemblyName":"Order.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.4288732+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"elapsed":"4","parameters":"@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [t].[OrderId], [t].[ClientId], [t].[CreatedAt], [t].[PaymentType], [t].[Status], [t].[Total], [o0].[OrderDetailId], [o0].[OrderId], [o0].[ProductId], [o0].[Quantity], [o0].[Total], [o0].[UnitPrice]\nFROM (\n    SELECT [o].[OrderId], [o].[ClientId], [o].[CreatedAt], [o].[PaymentType], [o].[Status], [o].[Total]\n    FROM [Order].[Orders] AS [o]\n    ORDER BY [o].[OrderId] DESC\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\n) AS [t]\nLEFT JOIN [Order].[OrderDetail] AS [o0] ON [t].[OrderId] = [o0].[OrderId]\nORDER BY [t].[OrderId] DESC","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.5288515+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"elapsed":"29","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Order].[Orders] AS [o]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.5321884+00:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"ObjectResultType":"ObjectResult","Type":"Service.Common.Collection.DataCollection`1[[Order.Service.Queries.DTOs.OrderDto, Order.Service.Queries, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.5552941+00:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","ElapsedMilliseconds":282.2295,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.5565673+00:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:05.5599962+00:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"182936786be0263c737d0d962db40414","SpanId":"0e76bb03cee6f4c8","Properties":{"ElapsedMilliseconds":318.1764,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000001","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:10.0700074+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:10.0707624+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:10.0778813+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:10.0902786+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:10.0946913+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.1157160+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.1164433+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.1226831+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.1268531+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.1283900+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.5117589+00:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json; charset=utf-8","ContentLength":82,"Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.5169026+00:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.Create (Order.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.5244465+00:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"RouteData":"{action = \"Create\", controller = \"Order\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Order.Service.EventHandlers.Commands.OrderCreateCommand)","Controller":"Order.Api.Controllers.OrderController","AssemblyName":"Order.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.5833934+00:00","Level":"Information","MessageTemplate":"--- New order creation started","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.6046691+00:00","Level":"Information","MessageTemplate":"--- Preparing detail","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.6077096+00:00","Level":"Information","MessageTemplate":"--- Preparing header","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.6125602+00:00","Level":"Information","MessageTemplate":"--- Creating order","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.7715422+00:00","Level":"Warning","MessageTemplate":"Savepoints are disabled because Multiple Active Result Sets (MARS) is enabled. If 'SaveChanges' fails, then the transaction cannot be automatically rolled back to a known clean state. Instead, the transaction should be rolled back by the application before retrying 'SaveChanges'. See https://go.microsoft.com/fwlink/?linkid=2149338 for more information and examples. To identify the code which triggers this warning, call 'ConfigureWarnings(w => w.Throw(SqlServerEventId.SavepointsDisabledBecauseOfMARS))'.","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"EventId":{"Id":30004,"Name":"Microsoft.EntityFrameworkCore.Database.Transaction.SavepointsDisabledBecauseOfMARS"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Transaction","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.8279230+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"elapsed":"24","parameters":"@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\nSET NOCOUNT ON;\nINSERT INTO [Order].[Orders] ([ClientId], [CreatedAt], [PaymentType], [Status], [Total])\nOUTPUT INSERTED.[OrderId]\nVALUES (@p0, @p1, @p2, @p3, @p4);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.9054250+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"elapsed":"8","parameters":"@p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\nSET NOCOUNT ON;\nINSERT INTO [Order].[OrderDetail] ([OrderId], [ProductId], [Quantity], [Total], [UnitPrice])\nOUTPUT INSERTED.[OrderDetailId]\nVALUES (@p5, @p6, @p7, @p8, @p9);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.9149232+00:00","Level":"Information","MessageTemplate":"--- Order 1 was created","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.9155715+00:00","Level":"Information","MessageTemplate":"--- Updating stock","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.9326286+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"HttpMethod":"PUT","Uri":"http://catalog.api:8080/stocks","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.ICatalogProxy.LogicalHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","Scope":["HTTP PUT http://catalog.api:8080/stocks"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:20.9332101+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"HttpMethod":"PUT","Uri":"http://catalog.api:8080/stocks","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.ICatalogProxy.ClientHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","Scope":["HTTP PUT http://catalog.api:8080/stocks"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.3884122+00:00","Level":"Information","MessageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"ElapsedMilliseconds":451.2564,"StatusCode":204,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.ICatalogProxy.ClientHandler","HttpMethod":"PUT","Uri":"http://catalog.api:8080/stocks","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","Scope":["HTTP PUT http://catalog.api:8080/stocks"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.3893230+00:00","Level":"Information","MessageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"ElapsedMilliseconds":456.581,"StatusCode":204,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.ICatalogProxy.LogicalHandler","HttpMethod":"PUT","Uri":"http://catalog.api:8080/stocks","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","Scope":["HTTP PUT http://catalog.api:8080/stocks"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.4142218+00:00","Level":"Information","MessageTemplate":"--- New order creation ended","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"SourceContext":"Order.Service.EventHandlers.OrderCreateEventHandler","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.4206992+00:00","Level":"Information","MessageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"2d599cd8-4136-49d8-968d-b36f526f08e7","ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.4220172+00:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"ActionName":"Order.Api.Controllers.OrderController.Create (Order.Api)","ElapsedMilliseconds":896.7505,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.4228395+00:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.Create (Order.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.4247292+00:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e27190d2581c489683ec64b8b67ae507","SpanId":"209b1a52a9d6adaf","Properties":{"ElapsedMilliseconds":912.9365,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.1","Method":"POST","Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000002","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.5366606+00:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.5625075+00:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.5642357+00:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"RouteData":"{action = \"GetAll\", controller = \"Order\"}","MethodInfo":"System.Threading.Tasks.Task`1[Service.Common.Collection.DataCollection`1[Order.Service.Queries.DTOs.OrderDto]] GetAll(Int32, Int32, System.String)","Controller":"Order.Api.Controllers.OrderController","AssemblyName":"Order.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.6283331+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"elapsed":"37","parameters":"@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [t].[OrderId], [t].[ClientId], [t].[CreatedAt], [t].[PaymentType], [t].[Status], [t].[Total], [o0].[OrderDetailId], [o0].[OrderId], [o0].[ProductId], [o0].[Quantity], [o0].[Total], [o0].[UnitPrice]\nFROM (\n    SELECT [o].[OrderId], [o].[ClientId], [o].[CreatedAt], [o].[PaymentType], [o].[Status], [o].[Total]\n    FROM [Order].[Orders] AS [o]\n    ORDER BY [o].[OrderId] DESC\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\n) AS [t]\nLEFT JOIN [Order].[OrderDetail] AS [o0] ON [t].[OrderId] = [o0].[OrderId]\nORDER BY [t].[OrderId] DESC","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.6962136+00:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Order].[Orders] AS [o]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.7728401+00:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"ObjectResultType":"ObjectResult","Type":"Service.Common.Collection.DataCollection`1[[Order.Service.Queries.DTOs.OrderDto, Order.Service.Queries, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"adeced7b-7c99-4b79-9936-01e037864e2d","ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.7803264+00:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"ActionName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","ElapsedMilliseconds":215.2519,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.7817281+00:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"EndpointName":"Order.Api.Controllers.OrderController.GetAll (Order.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:21.7840913+00:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"f6c87ec2fec01557aefc80eecccf6be8","SpanId":"729b4fe6c340e183","Properties":{"ElapsedMilliseconds":247.391,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"order.api:8080","PathBase":"","Path":"/orders","QueryString":"?page=1&take=10&ids=","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNCV0SHA3TQO:00000003","RequestPath":"/orders","ConnectionId":"0HNCV0SHA3TQO","EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:30.1384595+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:30.1390579+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:30.1452422+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:30.1495573+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:30.1513527+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:40.1515595+00:00","Level":"Information","MessageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:40.1521360+00:00","Level":"Information","MessageTemplate":"Sending HTTP request {HttpMethod} {Uri}","Properties":{"HttpMethod":"GET","Uri":"http://[::]:8080/api/health","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET http://[::]:8080/api/health"],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:40.1595833+00:00","Level":"Error","MessageTemplate":"GetHealthReport threw an exception when trying to get report from /api/health configured with name Identity api.","Exception":"System.Net.Http.HttpRequestException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)\n ---> System.ArgumentException: IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')\n   at System.Net.Dns.GetHostEntryOrAddressesCoreAsync(String hostName, Boolean justReturnParsedIp, Boolean throwOnIIPAny, Boolean justAddresses, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Dns.GetHostAddressesAsync(String hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken)\n   at System.Net.Sockets.SocketAsyncEventArgs.DnsConnectAsync(DnsEndPoint endPoint, SocketType socketType, ProtocolType protocolType)\n   at System.Net.Sockets.Socket.ConnectAsync(SocketAsyncEventArgs e, Boolean userSocket, Boolean saeaCancelable)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)\n   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReportAsync(HealthCheckConfiguration configuration) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.UI/Core/HostedService/HealthCheckReportCollector.cs:line 142","Properties":{"SourceContext":"HealthChecks.UI.Core.HostedService.HealthCheckReportCollector","Scope":["HealthReportCollector is collecting health checks results."],"ExceptionDetail":{"HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') ([::]:8080)","Source":"System.Net.Http","TargetSite":"Void MoveNext()","InnerException":{"Type":"System.ArgumentException","HResult":-2147024809,"Message":"IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName')","Source":"System.Net.NameResolution","TargetSite":"System.Threading.Tasks.Task GetHostEntryOrAddressesCoreAsync(System.String, Boolean, Boolean, Boolean, System.Net.Sockets.AddressFamily, System.Threading.CancellationToken)","ParamName":"hostName"},"HttpRequestError":"ConnectionError","StatusCode":null,"Type":"System.Net.Http.HttpRequestException"},"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:40.1637748+00:00","Level":"Information","MessageTemplate":"Notification is sent on same window time.","Properties":{"SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
{"Timestamp":"2025-05-29T23:20:40.1656609+00:00","Level":"Information","MessageTemplate":"Saved {count} entities to in-memory store.","Properties":{"count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."],"EnvironmentName":"Development","EnvironmentUserName":"292d131944c1\\app","MachineName":"292d131944c1","ApplicationName":"Order.Api"}}
