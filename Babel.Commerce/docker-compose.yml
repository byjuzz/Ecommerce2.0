version: '3.4'

services:
  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.Api/Dockerfile

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.Api/Dockerfile

  seq:
    container_name: seg
    image: datalust/seq:latest
    ports:
          - "5341:80" # Exposes the Seq UI and API
          - "5342:5341" # Recommended to expose ingestion-only port separately
    environment:
        - ACCEPT_EULA=Y 
        - SEQ_FIRSTRUN_ADMINPASSWORDHASH=
    volumes:
        - seq-data:/data
    restart: unless-stopped
    
  mssql:
   container_name: mssql
   image: mcr.microsoft.com/mssql/server:2022-latest 
   environment:
      - ACCEPT_EULA="Y"
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      # MSSQL_LOGGING: "verbose"
      # MSSQL_PID: "Developer"
   ports:
        - 1433:1433
   volumes:
       - ./data:/var/opt/mssql/data
       - ./log:/var/opt/mssql/log
   healthcheck:
       test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$$MSSQL_SA_PASSWORD" -Q "SELECT 1" -b -o /dev/null
       interval: 10s
       timeout: 5s
       retries: 10
       start_period: 15s
 
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=Administrador
        - RABBITMQ_DEFAULT_PASS=Babel2025

  client.api:
    image: ${DOCKER_REGISTRY-}clientapi
    build:
      context: .
      dockerfile: src/Services/Client/Client.Api/Dockerfile

  order.api:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: src/Services/Order/Order.Api/Dockerfile

  api.gateway.webclient:
    image: ${DOCKER_REGISTRY-}apigatewaywebclient
    build:
      context: .
      dockerfile: src/Gateways/Api.Gateway.WebClient/Dockerfile

  clients.authentication:
    image: ${DOCKER_REGISTRY-}clientsauthentication
    build:
      context: .
      dockerfile: src/Clients/Clients.Authentication/Dockerfile

  clients.webclient:
    image: ${DOCKER_REGISTRY-}clientswebclient
    build:
      context: .
      dockerfile: src/Clients/Clients.WebClient/Dockerfile

  ocelot.api.gateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: src/Gateways/Ocelot.Api.Gateway/Dockerfile

volumes:
  seq-data:
  rabbitmq_data:

networks:
  default:
    name: microservicenet






